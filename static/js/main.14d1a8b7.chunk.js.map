{"version":3,"sources":["Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","length","slice","calculateWinner","setState","concat","status","current","winner","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wPAEMA,G,MAAS,SAAAC,GACb,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,SAIPC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAI,EAAKF,MAAME,QAAQG,Q,+BAMpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAwFXC,E,YAtDb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAO,CACVC,QAAS,CAAC,CACRN,QAAQO,MAAM,GAAGC,KAAK,QAExBC,SAAQ,GANO,E,yEASNX,GACX,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQI,OAAO,GACfV,QAAQW,QAC5BC,EAAgBZ,IAAYA,EAAQF,KAGxCE,EAAQF,GAAGC,KAAKM,MAAMI,QAAU,IAAM,IACtCV,KAAKc,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBd,QAAQA,KAEVS,SAASV,KAAKM,MAAMI,a,+BAId,IAIJM,EAJG,OACDT,EAAUP,KAAKM,MAAMC,QACrBU,EAAUV,EAAQA,EAAQI,OAAQ,GAClCO,EAASL,EAAgBI,EAAQhB,SAQvC,OALEe,EADEE,EACM,WAAaA,EAEZ,iBAAmBlB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEM,QAASgB,EAAQhB,QACjBL,QAAS,SAACG,GAAD,OAAK,EAAKoB,YAAYpB,OAGnC,yBAAKJ,UAAU,aACb,6BAAMqB,GACN,mC,GA/CSb,IAAMC,WAyDzB,SAASS,EAAgBZ,GAWvB,IAVA,IAAMmB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEArB,EAAI,EAAGA,EAAIqB,EAAMT,OAAQZ,IAAK,CAAC,IAAD,cACnBqB,EAAMrB,GADa,GAC9BsB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KClHTG,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.14d1a8b7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nconst Square = props => {  \n  return (\n    <button \n      className=\"square\" \n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]} \n        onClick={()=>this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      history: [{\n        squares:Array(9).fill(null),\n      }],\n      xIsNext:true,\n    };\n  }\n  handleClick (i) {\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i]=this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares:squares\n      }]),\n      xIsNext:!this.state.xIsNext,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length -1];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      status =\"Winner: \" + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares} \n            onClick={(i)=>this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Game;\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}